<?php

trait action_undead
{
	function HandleUndeadAction($action_info)
	{
		self::checkAction('action_moveUndead'); 
			
		//self::notifyAllPlayers("debug", "", array('debugmessage' => "server::HandleUndeadAction()"));
		//self::notifyAllPlayers("debug", "", array('debugmessage' => var_export($action_info, true)));
		
		$outcome_info = ["failure_reason" => self::ACTION_FAIL_UNKNOWN];
		$current_player_id = $this->getCurrentPlayerId();
		$current_player_name = $this->getCurrentPlayerName();
		
		if($this->getStateName() != "playerUndead")
		{
			self::notifyAllPlayers("debug", "", array('debugmessage' => "fail due to wrong state"));
			$outcome_info = ["failure_reason" => self::ACTION_FAIL_STATE];
			return $outcome_info;
		}
		
		$success = true;
		
		//loop over every step to check legality
		foreach($action_info as $index => $army_action_info)
		{
			//todo
			break;
		}
		
		//assume that the moves are legal for now
		if($success)
		{
			foreach($action_info as $index => $army_action_info)
			{
				//self::notifyAllPlayers("debug", "", array('debugmessage' => var_export($army_action_info, true)));
				
				$army_name = $army_action_info["army_name"];
				$source_army_id = self::GetArmyIdNumFromString($army_name);
				$source_army = self::getObjectFromDB("SELECT army_id, province_id, player_id FROM armies WHERE army_id='$source_army_id'");
				$dest_province_name = "NA";
				
				//loop over all province steps and get the final destination
				$province_names = $army_action_info["province_names"];
				foreach($province_names as $province_name)
				{
					$dest_province_name = $province_name;
				}
				//self::notifyAllPlayers("debug", "", array('debugmessage' => "dest_province_name:$dest_province_name"));
				
				//finally, move the army
				if($dest_province_name != $source_army['province_id'])
				{
					//self::notifyAllPlayers("debug", "", array('debugmessage' => "updating database..."));
					//update the database with the army's new province
					$sql_update = "UPDATE armies SET province_id='$dest_province_name' WHERE army_id='$source_army_id';";
					self::DbQuery($sql_update);
					
					//record this move to help determine battle order later
					//unique value for move_id is automatically generated by the database
					//todo: i think this is unused?
					//$current_turn = $this->getGameStateValue("playerturn_nbr");
					//$sql_insert = "INSERT INTO province_move_order (turn_id, province_name, player_id) VALUES ('$current_turn','$dest_province_name','$current_player_id');";
					//self::DbQuery($sql_insert);
				}
				else
				{
					self::notifyAllPlayers("debug", "", array('debugmessage' => "WARNING: army move ended at same province it started"));
				}
				
				self::notifyAllPlayers('playerUndeadMove', '', array(
					'moving_player_id' => $current_player_id,
					'moving_player_name' => $current_player_name,
					'army_id_num' => $source_army_id,
					'dest_province_name' => $dest_province_name
				));
			}
			
			$this->activePlayerCompleteState();
		}
	}
}